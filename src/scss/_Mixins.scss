//
@mixin vp-vars {
    & {
        --vp-i-size: 100dvi;
        --vp-b-size: 100dvb;
    }

    //
    @media screen and ((display-mode: fullscreen) or (display-mode: standalone)) {
        --vp-i-size: min(var(--avail-width), 100dvi);
        --vp-b-size: min(var(--avail-height), 100dvb);
    }

    //
    @at-root :fullscreen & {
        --vp-i-size: min(var(--avail-width), 100dvi);
        --vp-b-size: min(var(--avail-height), 100dvb);
    }
};

// depends from virtual keyboards
@mixin fit-viewport {
    @include vp-vars;

    //
    inline-size: min(var(--vp-i-size, 100dvi), 100dvi);
    block-size: min(var(--vp-b-size, 100dvb), 100dvb);

    //
    max-inline-size: min(var(--vp-i-size, 100dvi), 100dvi);
    max-block-size: min(var(--vp-b-size, 100dvb), 100dvb);
};

//
@function pixel-perfect-translate($vx: unquote("var(--translate-x)"), $vy: unquote("var(--translate-y)"), $importance: null) {
    @return translate(
        #{unquote("round(nearest, calc(#{$vx} + 0.0001px), var(--ppx))")},
        #{unquote("round(nearest, calc(#{$vy} + 0.0001px), var(--ppx))")},
        0px
    );
}

//
@mixin zoomedViewport($zoom: var(--zoom, 1)) {
    //
    //inline-size: calc(100dvi / max($zoom, 0.125));
    //block-size: calc(100dvb / max($zoom, 0.125));

    //
    inline-size: calc(var(--vp-i-size, 100dvi) * max($zoom, 0.125));
    block-size: calc(var(--vp-b-size, 100dvb) * max($zoom, 0.125));

    //
    max-inline-size: calc(100dvi * max($zoom, 0.125));
    max-block-size: calc(100dvb * max($zoom, 0.125));
}
